<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/1999/REC-html401-19991224/strict.dtd">
<html>
<head>
<META http-equiv=Content-Type content="text/html; charset=UTF-8">
<title>Exported from Notepad++</title>
<style type="text/css">
span {
	font-family: 'Consolas';
	font-size: 10pt;
	color: #000000;
}
.sc0 {
}
.sc1 {
	color: #009933;
}
.sc2 {
	color: #009933;
}
.sc3 {
	color: #3333FF;
}
.sc4 {
	color: #800080;
}
.sc5 {
	color: #DD4444;
}
.sc6 {
	color: #4477AA;
}
.sc7 {
	font-weight: bold;
	color: #4477AA;
}
.sc8 {
	font-weight: bold;
}
.sc9 {
	color: #3333FF;
}
.sc12 {
	color: #A0522D;
}
.sc16 {
	font-style: italic;
	color: #8080C0;
}
.sc24 {
}
</style>
</head>
<body>
<div style="float: left; white-space: pre; line-height: 1; background: #FFFFFF; "><span class="sc8">library</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc24"> </span><span class="sc1">/* made by Bribe, special thanks to Vexorian &amp; Nestharus, version 5.0.0.0
 
    One map, one hashtable. Welcome to NewTable.
 
    This latest version of Table introduces a new struct: HashTableEx.
    This behaves like a HashTable but has some additional functionality
    such as storing each saved index in order to allow iteration and
    automatic destruction.
 
    API
 
    ------------
    struct Table
    | static method create takes nothing returns Table
    |     create a new Table
    |
    | method destroy takes nothing returns nothing
    |     destroy it
    |
    | method flush takes nothing returns nothing
    |     flush all stored values inside of it
    |
    | method remove takes integer key returns nothing
    |     remove the value at index "key"
    |
    | method operator []= takes integer key, $TYPE$ value returns nothing
    |     assign "value" to index "key"
    |
    | method operator [] takes integer key returns $TYPE$
    |     load the value at index "key"
    |
    | method has takes integer key returns boolean
    |     whether or not the key was assigned
    |
    ----------------
    struct TableArray
    | static method operator [] takes integer array_size returns TableArray
    |     create a new array of Tables of size "array_size"
    |
    | method destroy takes nothing returns nothing
    |     destroy it
    |
    | method flush takes nothing returns nothing
    |     flush and destroy it
    |
    | method operator size takes nothing returns integer
    |     returns the size of the TableArray
    |
    | method operator [] takes integer key returns Table
    |     returns a Table accessible exclusively to index "key"
*/</span><span class="sc24">
 
</span><span class="sc8">globals</span><span class="sc24">
    </span><span class="sc8">private</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc0">less</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc3">0</span><span class="sc24">    </span><span class="sc2">//Index generation for TableArrays (below 0).
</span><span class="sc24">    </span><span class="sc8">private</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc0">more</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc3">8190</span><span class="sc24"> </span><span class="sc2">//Index generation for Tables.
</span><span class="sc24">    </span><span class="sc2">//Configure it if you use more than 8190 "key" variables in your map (this will never happen though).
</span><span class="sc24"> 
    </span><span class="sc8">private</span><span class="sc24"> </span><span class="sc7">hashtable</span><span class="sc24"> </span><span class="sc0">ht</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc4">InitHashtable</span><span class="sc12">()</span><span class="sc24">
    </span><span class="sc8">private</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc24"> </span><span class="sc0">sizeK</span><span class="sc24">
    </span><span class="sc8">private</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc24"> </span><span class="sc0">listK</span><span class="sc24">
</span><span class="sc8">endglobals</span><span class="sc24">
 
</span><span class="sc8">private</span><span class="sc24"> </span><span class="sc8">struct</span><span class="sc24"> </span><span class="sc0">dex</span><span class="sc24"> </span><span class="sc8">extends</span><span class="sc24"> </span><span class="sc7">array</span><span class="sc24">
    </span><span class="sc8">static</span><span class="sc24"> </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc8">operator</span><span class="sc24"> </span><span class="sc0">size</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc24">
        </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc0">sizeK</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
    </span><span class="sc8">static</span><span class="sc24"> </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc8">operator</span><span class="sc24"> </span><span class="sc0">list</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc24">
        </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc0">listK</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
</span><span class="sc8">endstruct</span><span class="sc24">
 
</span><span class="sc8">private</span><span class="sc24"> </span><span class="sc8">struct</span><span class="sc24"> </span><span class="sc0">handles</span><span class="sc24"> </span><span class="sc8">extends</span><span class="sc24"> </span><span class="sc7">array</span><span class="sc24">
    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc8">operator</span><span class="sc24"> </span><span class="sc12">[]=</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc7">handle</span><span class="sc24"> </span><span class="sc0">h</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24">
        </span><span class="sc8">if</span><span class="sc24"> </span><span class="sc0">h</span><span class="sc24"> </span><span class="sc12">!=</span><span class="sc24"> </span><span class="sc9">null</span><span class="sc24"> </span><span class="sc8">then</span><span class="sc24">
            </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc4">SaveFogStateHandle</span><span class="sc12">(</span><span class="sc0">ht</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc4">ConvertFogState</span><span class="sc12">(</span><span class="sc4">GetHandleId</span><span class="sc12">(</span><span class="sc0">h</span><span class="sc12">)))</span><span class="sc24">
        </span><span class="sc8">elseif</span><span class="sc24"> </span><span class="sc4">HaveSavedHandle</span><span class="sc12">(</span><span class="sc0">ht</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc12">)</span><span class="sc24"> </span><span class="sc8">then</span><span class="sc24">
            </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc4">RemoveSavedHandle</span><span class="sc12">(</span><span class="sc0">ht</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc12">)</span><span class="sc24">
        </span><span class="sc8">endif</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc0">has</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">boolean</span><span class="sc24">
        </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc4">HaveSavedHandle</span><span class="sc12">(</span><span class="sc0">ht</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc12">)</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc0">remove</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24">
        </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc4">RemoveSavedHandle</span><span class="sc12">(</span><span class="sc0">ht</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc12">)</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
</span><span class="sc8">endstruct</span><span class="sc24">
 
</span><span class="sc8">private</span><span class="sc24"> </span><span class="sc8">struct</span><span class="sc24"> </span><span class="sc0">agents</span><span class="sc24"> </span><span class="sc8">extends</span><span class="sc24"> </span><span class="sc7">array</span><span class="sc24">
    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc8">operator</span><span class="sc24"> </span><span class="sc12">[]=</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc7">agent</span><span class="sc24"> </span><span class="sc0">value</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24">
        </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc4">SaveAgentHandle</span><span class="sc12">(</span><span class="sc0">ht</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc0">value</span><span class="sc12">)</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
</span><span class="sc8">endstruct</span><span class="sc24">
 
</span><span class="sc2">//! textmacro NEW_ARRAY_BASIC takes SUPER, FUNC, TYPE
</span><span class="sc8">private</span><span class="sc24"> </span><span class="sc8">struct</span><span class="sc24"> </span><span class="sc12">$</span><span class="sc0">TYPE</span><span class="sc12">$</span><span class="sc0">s</span><span class="sc24"> </span><span class="sc8">extends</span><span class="sc24"> </span><span class="sc7">array</span><span class="sc24">
    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc8">operator</span><span class="sc24"> </span><span class="sc12">[]</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc12">$</span><span class="sc0">TYPE</span><span class="sc12">$</span><span class="sc24">
        </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc0">Load</span><span class="sc12">$</span><span class="sc0">FUNC</span><span class="sc12">$(</span><span class="sc0">ht</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc12">)</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc8">operator</span><span class="sc24"> </span><span class="sc12">[]=</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc12">$</span><span class="sc0">TYPE</span><span class="sc12">$</span><span class="sc24"> </span><span class="sc0">value</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24">
        </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc0">Save</span><span class="sc12">$</span><span class="sc0">FUNC</span><span class="sc12">$(</span><span class="sc0">ht</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc0">value</span><span class="sc12">)</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc0">has</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">boolean</span><span class="sc24">
        </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc0">HaveSaved</span><span class="sc12">$</span><span class="sc0">SUPER</span><span class="sc12">$(</span><span class="sc0">ht</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc12">)</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc0">remove</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24">
        </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc0">RemoveSaved</span><span class="sc12">$</span><span class="sc0">SUPER</span><span class="sc12">$(</span><span class="sc0">ht</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc12">)</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
</span><span class="sc8">endstruct</span><span class="sc24">
</span><span class="sc8">private</span><span class="sc24"> </span><span class="sc8">module</span><span class="sc24"> </span><span class="sc12">$</span><span class="sc0">TYPE</span><span class="sc12">$</span><span class="sc0">m</span><span class="sc24">
    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc8">operator</span><span class="sc24"> </span><span class="sc12">$</span><span class="sc0">TYPE</span><span class="sc12">$</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc12">$</span><span class="sc0">TYPE</span><span class="sc12">$</span><span class="sc0">s</span><span class="sc24">
        </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
</span><span class="sc8">endmodule</span><span class="sc24">
</span><span class="sc2">//! endtextmacro
</span><span class="sc24"> 
</span><span class="sc2">//! textmacro NEW_ARRAY takes FUNC, TYPE
</span><span class="sc8">private</span><span class="sc24"> </span><span class="sc8">struct</span><span class="sc24"> </span><span class="sc12">$</span><span class="sc0">TYPE</span><span class="sc12">$</span><span class="sc0">s</span><span class="sc24"> </span><span class="sc8">extends</span><span class="sc24"> </span><span class="sc7">array</span><span class="sc24">
    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc8">operator</span><span class="sc24"> </span><span class="sc12">[]</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc12">$</span><span class="sc0">TYPE</span><span class="sc12">$</span><span class="sc24">
        </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc0">Load</span><span class="sc12">$</span><span class="sc0">FUNC</span><span class="sc12">$</span><span class="sc0">Handle</span><span class="sc12">(</span><span class="sc0">ht</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc12">)</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc8">operator</span><span class="sc24"> </span><span class="sc12">[]=</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc12">$</span><span class="sc0">TYPE</span><span class="sc12">$</span><span class="sc24"> </span><span class="sc0">value</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24">
        </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc0">Save</span><span class="sc12">$</span><span class="sc0">FUNC</span><span class="sc12">$</span><span class="sc0">Handle</span><span class="sc12">(</span><span class="sc0">ht</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc0">value</span><span class="sc12">)</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc0">has</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">boolean</span><span class="sc24">
        </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc4">HaveSavedHandle</span><span class="sc12">(</span><span class="sc0">ht</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc12">)</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc0">remove</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24">
        </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc4">RemoveSavedHandle</span><span class="sc12">(</span><span class="sc0">ht</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc12">)</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
</span><span class="sc8">endstruct</span><span class="sc24">
</span><span class="sc8">private</span><span class="sc24"> </span><span class="sc8">module</span><span class="sc24"> </span><span class="sc12">$</span><span class="sc0">TYPE</span><span class="sc12">$</span><span class="sc0">m</span><span class="sc24">
    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc8">operator</span><span class="sc24"> </span><span class="sc12">$</span><span class="sc0">TYPE</span><span class="sc12">$</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc12">$</span><span class="sc0">TYPE</span><span class="sc12">$</span><span class="sc0">s</span><span class="sc24">
        </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
</span><span class="sc8">endmodule</span><span class="sc24">
</span><span class="sc2">//! endtextmacro
</span><span class="sc24"> 
</span><span class="sc2">//Run these textmacros to include the entire hashtable API as wrappers.
//Don't be intimidated by the number of macros - Vexorian's map optimizer is
//supposed to kill functions which inline (all of these functions inline).
//! runtextmacro NEW_ARRAY_BASIC("Real", "Real", "real")
//! runtextmacro NEW_ARRAY_BASIC("Boolean", "Boolean", "boolean")
//! runtextmacro NEW_ARRAY_BASIC("String", "Str", "string")
//New textmacro to allow table.integer[] syntax for compatibility with textmacros that might desire it.
//! runtextmacro NEW_ARRAY_BASIC("Integer", "Integer", "integer")
</span><span class="sc24"> 
</span><span class="sc2">//! runtextmacro NEW_ARRAY("Player", "player")
//! runtextmacro NEW_ARRAY("Widget", "widget")
//! runtextmacro NEW_ARRAY("Destructable", "destructable")
//! runtextmacro NEW_ARRAY("Item", "item")
//! runtextmacro NEW_ARRAY("Unit", "unit")
//! runtextmacro NEW_ARRAY("Ability", "ability")
//! runtextmacro NEW_ARRAY("Timer", "timer")
//! runtextmacro NEW_ARRAY("Trigger", "trigger")
//! runtextmacro NEW_ARRAY("TriggerCondition", "triggercondition")
//! runtextmacro NEW_ARRAY("TriggerAction", "triggeraction")
//! runtextmacro NEW_ARRAY("TriggerEvent", "event")
//! runtextmacro NEW_ARRAY("Force", "force")
//! runtextmacro NEW_ARRAY("Group", "group")
//! runtextmacro NEW_ARRAY("Location", "location")
//! runtextmacro NEW_ARRAY("Rect", "rect")
//! runtextmacro NEW_ARRAY("BooleanExpr", "boolexpr")
//! runtextmacro NEW_ARRAY("Sound", "sound")
//! runtextmacro NEW_ARRAY("Effect", "effect")
//! runtextmacro NEW_ARRAY("UnitPool", "unitpool")
//! runtextmacro NEW_ARRAY("ItemPool", "itempool")
//! runtextmacro NEW_ARRAY("Quest", "quest")
//! runtextmacro NEW_ARRAY("QuestItem", "questitem")
//! runtextmacro NEW_ARRAY("DefeatCondition", "defeatcondition")
//! runtextmacro NEW_ARRAY("TimerDialog", "timerdialog")
//! runtextmacro NEW_ARRAY("Leaderboard", "leaderboard")
//! runtextmacro NEW_ARRAY("Multiboard", "multiboard")
//! runtextmacro NEW_ARRAY("MultiboardItem", "multiboarditem")
//! runtextmacro NEW_ARRAY("Trackable", "trackable")
//! runtextmacro NEW_ARRAY("Dialog", "dialog")
//! runtextmacro NEW_ARRAY("Button", "button")
//! runtextmacro NEW_ARRAY("TextTag", "texttag")
//! runtextmacro NEW_ARRAY("Lightning", "lightning")
//! runtextmacro NEW_ARRAY("Image", "image")
//! runtextmacro NEW_ARRAY("Ubersplat", "ubersplat")
//! runtextmacro NEW_ARRAY("Region", "region")
//! runtextmacro NEW_ARRAY("FogState", "fogstate")
//! runtextmacro NEW_ARRAY("FogModifier", "fogmodifier")
//! runtextmacro NEW_ARRAY("Hashtable", "hashtable")
</span><span class="sc24"> 
</span><span class="sc8">struct</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc24"> </span><span class="sc8">extends</span><span class="sc24"> </span><span class="sc7">array</span><span class="sc24">
 
    </span><span class="sc2">// Implement modules for intuitive syntax (tb.handle; tb.unit; etc.)
</span><span class="sc24">    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">realm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">integerm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">booleanm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">stringm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">playerm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">widgetm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">destructablem</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">itemm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">unitm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">abilitym</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">timerm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">triggerm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">triggerconditionm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">triggeractionm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">eventm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">forcem</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">groupm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">locationm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">rectm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">boolexprm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">soundm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">effectm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">unitpoolm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">itempoolm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">questm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">questitemm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">defeatconditionm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">timerdialogm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">leaderboardm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">multiboardm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">multiboarditemm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">trackablem</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">dialogm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">buttonm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">texttagm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">lightningm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">imagem</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">ubersplatm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">regionm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">fogstatem</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">fogmodifierm</span><span class="sc24">
    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">hashtablem</span><span class="sc24">
 
    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc8">operator</span><span class="sc24"> </span><span class="sc7">handle</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc0">handles</span><span class="sc24">
        </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
 
    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc8">operator</span><span class="sc24"> </span><span class="sc7">agent</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc0">agents</span><span class="sc24">
        </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
 
    </span><span class="sc2">//set this = tb[GetSpellAbilityId()]
</span><span class="sc24">    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc8">operator</span><span class="sc24"> </span><span class="sc12">[]</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc24">
        </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc4">LoadInteger</span><span class="sc12">(</span><span class="sc0">ht</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc12">)</span><span class="sc24"> </span><span class="sc2">//return this.integer[key]
</span><span class="sc24">    </span><span class="sc8">endmethod</span><span class="sc24">
 
    </span><span class="sc2">//set tb[389034] = 8192
</span><span class="sc24">    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc8">operator</span><span class="sc24"> </span><span class="sc12">[]=</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc24"> </span><span class="sc0">tb</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24">
        </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc4">SaveInteger</span><span class="sc12">(</span><span class="sc0">ht</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc0">tb</span><span class="sc12">)</span><span class="sc24"> </span><span class="sc2">//set this.integer[key] = tb
</span><span class="sc24">    </span><span class="sc8">endmethod</span><span class="sc24">
 
    </span><span class="sc2">//set b = tb.has(2493223)
</span><span class="sc24">    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc0">has</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">boolean</span><span class="sc24">
        </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc4">HaveSavedInteger</span><span class="sc12">(</span><span class="sc0">ht</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc12">)</span><span class="sc24"> </span><span class="sc2">//return this.integer.has(key)
</span><span class="sc24">    </span><span class="sc8">endmethod</span><span class="sc24">
 
    </span><span class="sc2">//call tb.remove(294080)
</span><span class="sc24">    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc0">remove</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24">
        </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc4">RemoveSavedInteger</span><span class="sc12">(</span><span class="sc0">ht</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc12">)</span><span class="sc24"> </span><span class="sc2">//call this.integer.remove(key)
</span><span class="sc24">    </span><span class="sc8">endmethod</span><span class="sc24">
 
    </span><span class="sc2">//Remove all data from a Table instance
</span><span class="sc24">    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc0">flush</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24">
        </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc4">FlushChildHashtable</span><span class="sc12">(</span><span class="sc0">ht</span><span class="sc12">,</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc12">)</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
 
    </span><span class="sc2">//local Table tb = Table.create()
</span><span class="sc24">    </span><span class="sc8">static</span><span class="sc24"> </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc0">create</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc24">
        </span><span class="sc8">local</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">dex</span><span class="sc12">.</span><span class="sc0">list</span><span class="sc12">[</span><span class="sc3">0</span><span class="sc12">]</span><span class="sc24">
   
        </span><span class="sc8">if</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc24"> </span><span class="sc12">==</span><span class="sc24"> </span><span class="sc3">0</span><span class="sc24"> </span><span class="sc8">then</span><span class="sc24">
            </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">more</span><span class="sc24"> </span><span class="sc12">+</span><span class="sc24"> </span><span class="sc3">1</span><span class="sc24">
            </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">more</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc24">
        </span><span class="sc8">else</span><span class="sc24">
            </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">dex</span><span class="sc12">.</span><span class="sc0">list</span><span class="sc12">[</span><span class="sc3">0</span><span class="sc12">]</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">dex</span><span class="sc12">.</span><span class="sc0">list</span><span class="sc12">[</span><span class="sc6">this</span><span class="sc12">]</span><span class="sc24">
            </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc0">dex</span><span class="sc12">.</span><span class="sc0">list</span><span class="sc12">.</span><span class="sc0">remove</span><span class="sc12">(</span><span class="sc6">this</span><span class="sc12">)</span><span class="sc24"> </span><span class="sc2">//Clear hashed memory
</span><span class="sc24">        </span><span class="sc8">endif</span><span class="sc24">
   
        </span><span class="sc8">debug</span><span class="sc24"> </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">dex</span><span class="sc12">.</span><span class="sc0">list</span><span class="sc12">[</span><span class="sc6">this</span><span class="sc12">]</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc3">-1</span><span class="sc24">
        </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
 
    </span><span class="sc2">// Removes all data from a Table instance and recycles its index.
</span><span class="sc24">    </span><span class="sc2">//
</span><span class="sc24">    </span><span class="sc2">//     call tb.destroy()
</span><span class="sc24">    </span><span class="sc2">//
</span><span class="sc24">    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc0">destroy</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24">
        </span><span class="sc8">debug</span><span class="sc24"> </span><span class="sc8">if</span><span class="sc24"> </span><span class="sc0">dex</span><span class="sc12">.</span><span class="sc0">list</span><span class="sc12">[</span><span class="sc6">this</span><span class="sc12">]</span><span class="sc24"> </span><span class="sc12">!=</span><span class="sc24"> </span><span class="sc3">-1</span><span class="sc24"> </span><span class="sc8">then</span><span class="sc24">
            </span><span class="sc8">debug</span><span class="sc24"> </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc5">BJDebugMsg</span><span class="sc12">(</span><span class="sc16">"Table Error: Tried to double-free instance: "</span><span class="sc24"> </span><span class="sc12">+</span><span class="sc24"> </span><span class="sc4">I2S</span><span class="sc12">(</span><span class="sc6">this</span><span class="sc12">))</span><span class="sc24">
            </span><span class="sc8">debug</span><span class="sc24"> </span><span class="sc8">return</span><span class="sc24">
        </span><span class="sc8">debug</span><span class="sc24"> </span><span class="sc8">endif</span><span class="sc24">
   
        </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc12">.</span><span class="sc0">flush</span><span class="sc12">()</span><span class="sc24">
   
        </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">dex</span><span class="sc12">.</span><span class="sc0">list</span><span class="sc12">[</span><span class="sc6">this</span><span class="sc12">]</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">dex</span><span class="sc12">.</span><span class="sc0">list</span><span class="sc12">[</span><span class="sc3">0</span><span class="sc12">]</span><span class="sc24">
        </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">dex</span><span class="sc12">.</span><span class="sc0">list</span><span class="sc12">[</span><span class="sc3">0</span><span class="sc12">]</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
 
    </span><span class="sc2">//! runtextmacro optional TABLE_BC_METHODS()
</span><span class="sc8">endstruct</span><span class="sc24">
 
</span><span class="sc2">//! runtextmacro optional TABLE_BC_STRUCTS()
</span><span class="sc24"> 
</span><span class="sc8">struct</span><span class="sc24"> </span><span class="sc0">TableArray</span><span class="sc24"> </span><span class="sc8">extends</span><span class="sc24"> </span><span class="sc7">array</span><span class="sc24">
 
    </span><span class="sc2">//Returns a new TableArray to do your bidding. Simply use:
</span><span class="sc24">    </span><span class="sc2">//
</span><span class="sc24">    </span><span class="sc2">//    local TableArray ta = TableArray[array_size]
</span><span class="sc24">    </span><span class="sc2">//
</span><span class="sc24">    </span><span class="sc8">static</span><span class="sc24"> </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc8">operator</span><span class="sc24"> </span><span class="sc12">[]</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc0">array_size</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc0">TableArray</span><span class="sc24">
        </span><span class="sc8">local</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc24"> </span><span class="sc0">tb</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">dex</span><span class="sc12">.</span><span class="sc0">size</span><span class="sc12">[</span><span class="sc0">array_size</span><span class="sc12">]</span><span class="sc24"> </span><span class="sc2">//Get the unique recycle list for this array size
</span><span class="sc24">        </span><span class="sc8">local</span><span class="sc24"> </span><span class="sc0">TableArray</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">tb</span><span class="sc12">[</span><span class="sc3">0</span><span class="sc12">]</span><span class="sc24">         </span><span class="sc2">//The last-destroyed TableArray that had this array size
</span><span class="sc24">   
        </span><span class="sc8">debug</span><span class="sc24"> </span><span class="sc8">if</span><span class="sc24"> </span><span class="sc0">array_size</span><span class="sc24"> </span><span class="sc12">&lt;=</span><span class="sc24"> </span><span class="sc3">0</span><span class="sc24"> </span><span class="sc8">then</span><span class="sc24">
            </span><span class="sc8">debug</span><span class="sc24"> </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc5">BJDebugMsg</span><span class="sc12">(</span><span class="sc16">"TypeError: Invalid specified TableArray size: "</span><span class="sc24"> </span><span class="sc12">+</span><span class="sc24"> </span><span class="sc4">I2S</span><span class="sc12">(</span><span class="sc0">array_size</span><span class="sc12">))</span><span class="sc24">
            </span><span class="sc8">debug</span><span class="sc24"> </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc3">0</span><span class="sc24">
        </span><span class="sc8">debug</span><span class="sc24"> </span><span class="sc8">endif</span><span class="sc24">
   
        </span><span class="sc8">if</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc24"> </span><span class="sc12">==</span><span class="sc24"> </span><span class="sc3">0</span><span class="sc24"> </span><span class="sc8">then</span><span class="sc24">
            </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">less</span><span class="sc24"> </span><span class="sc12">-</span><span class="sc24"> </span><span class="sc0">array_size</span><span class="sc24">
            </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">less</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc24">
        </span><span class="sc8">else</span><span class="sc24">
            </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">tb</span><span class="sc12">[</span><span class="sc3">0</span><span class="sc12">]</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">tb</span><span class="sc12">[</span><span class="sc6">this</span><span class="sc12">]</span><span class="sc24">  </span><span class="sc2">//Set the last destroyed to the last-last destroyed
</span><span class="sc24">            </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc0">tb</span><span class="sc12">.</span><span class="sc0">remove</span><span class="sc12">(</span><span class="sc6">this</span><span class="sc12">)</span><span class="sc24">  </span><span class="sc2">//Clear hashed memory
</span><span class="sc24">        </span><span class="sc8">endif</span><span class="sc24">
   
        </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">dex</span><span class="sc12">.</span><span class="sc0">size</span><span class="sc12">[</span><span class="sc6">this</span><span class="sc12">]</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">array_size</span><span class="sc24"> </span><span class="sc2">//This remembers the array size
</span><span class="sc24">        </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
 
    </span><span class="sc2">//Returns the size of the TableArray
</span><span class="sc24">    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc8">operator</span><span class="sc24"> </span><span class="sc0">size</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24">
        </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc0">dex</span><span class="sc12">.</span><span class="sc0">size</span><span class="sc12">[</span><span class="sc6">this</span><span class="sc12">]</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
 
    </span><span class="sc2">//This magic method enables two-dimensional[array][syntax] for Tables,
</span><span class="sc24">    </span><span class="sc2">//similar to the two-dimensional utility provided by hashtables them-
</span><span class="sc24">    </span><span class="sc2">//selves.
</span><span class="sc24">    </span><span class="sc2">//
</span><span class="sc24">    </span><span class="sc2">//ta[integer a].unit[integer b] = unit u
</span><span class="sc24">    </span><span class="sc2">//ta[integer a][integer c] = integer d
</span><span class="sc24">    </span><span class="sc2">//
</span><span class="sc24">    </span><span class="sc2">//Inline-friendly when not running in debug mode
</span><span class="sc24">    </span><span class="sc2">//
</span><span class="sc24">    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc8">operator</span><span class="sc24"> </span><span class="sc12">[]</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc24">
        </span><span class="sc8">static</span><span class="sc24"> </span><span class="sc8">if</span><span class="sc24"> </span><span class="sc0">DEBUG_MODE</span><span class="sc24"> </span><span class="sc8">then</span><span class="sc24">
            </span><span class="sc8">local</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc0">i</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc12">.</span><span class="sc0">size</span><span class="sc24">
            </span><span class="sc8">if</span><span class="sc24"> </span><span class="sc0">i</span><span class="sc24"> </span><span class="sc12">==</span><span class="sc24"> </span><span class="sc3">0</span><span class="sc24"> </span><span class="sc8">then</span><span class="sc24">
                </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc5">BJDebugMsg</span><span class="sc12">(</span><span class="sc16">"IndexError: Tried to get key from invalid TableArray instance: "</span><span class="sc24"> </span><span class="sc12">+</span><span class="sc24"> </span><span class="sc4">I2S</span><span class="sc12">(</span><span class="sc6">this</span><span class="sc12">))</span><span class="sc24">
                </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc3">0</span><span class="sc24">
            </span><span class="sc8">elseif</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc24"> </span><span class="sc12">&lt;</span><span class="sc24"> </span><span class="sc3">0</span><span class="sc24"> </span><span class="sc8">or</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc24"> </span><span class="sc12">&gt;=</span><span class="sc24"> </span><span class="sc0">i</span><span class="sc24"> </span><span class="sc8">then</span><span class="sc24">
                </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc5">BJDebugMsg</span><span class="sc12">(</span><span class="sc16">"IndexError: Tried to get key ["</span><span class="sc24"> </span><span class="sc12">+</span><span class="sc24"> </span><span class="sc4">I2S</span><span class="sc12">(</span><span class="sc7">key</span><span class="sc12">)</span><span class="sc24"> </span><span class="sc12">+</span><span class="sc24"> </span><span class="sc16">"] from outside TableArray bounds: "</span><span class="sc24"> </span><span class="sc12">+</span><span class="sc24"> </span><span class="sc4">I2S</span><span class="sc12">(</span><span class="sc0">i</span><span class="sc12">))</span><span class="sc24">
                </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc3">0</span><span class="sc24">
            </span><span class="sc8">endif</span><span class="sc24">
        </span><span class="sc8">endif</span><span class="sc24">
        </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc24"> </span><span class="sc12">+</span><span class="sc24"> </span><span class="sc7">key</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
 
    </span><span class="sc2">//Destroys a TableArray without flushing it; I assume you call .flush()
</span><span class="sc24">    </span><span class="sc2">//if you want it flushed too. This is a public method so that you don't
</span><span class="sc24">    </span><span class="sc2">//have to loop through all TableArray indices to flush them if you don't
</span><span class="sc24">    </span><span class="sc2">//need to (ie. if you were flushing all child-keys as you used them).
</span><span class="sc24">    </span><span class="sc2">//
</span><span class="sc24">    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc0">destroy</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24">
        </span><span class="sc8">local</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc24"> </span><span class="sc0">tb</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">dex</span><span class="sc12">.</span><span class="sc0">size</span><span class="sc12">[</span><span class="sc6">this</span><span class="sc12">.</span><span class="sc0">size</span><span class="sc12">]</span><span class="sc24">
   
        </span><span class="sc8">debug</span><span class="sc24"> </span><span class="sc8">if</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc12">.</span><span class="sc0">size</span><span class="sc24"> </span><span class="sc12">==</span><span class="sc24"> </span><span class="sc3">0</span><span class="sc24"> </span><span class="sc8">then</span><span class="sc24">
            </span><span class="sc8">debug</span><span class="sc24"> </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc5">BJDebugMsg</span><span class="sc12">(</span><span class="sc16">"TypeError: Tried to destroy an invalid TableArray: "</span><span class="sc24"> </span><span class="sc12">+</span><span class="sc24"> </span><span class="sc4">I2S</span><span class="sc12">(</span><span class="sc6">this</span><span class="sc12">))</span><span class="sc24">
            </span><span class="sc8">debug</span><span class="sc24"> </span><span class="sc8">return</span><span class="sc24">
        </span><span class="sc8">debug</span><span class="sc24"> </span><span class="sc8">endif</span><span class="sc24">
   
        </span><span class="sc8">if</span><span class="sc24"> </span><span class="sc0">tb</span><span class="sc24"> </span><span class="sc12">==</span><span class="sc24"> </span><span class="sc3">0</span><span class="sc24"> </span><span class="sc8">then</span><span class="sc24">
            </span><span class="sc2">//Create a Table to index recycled instances with their array size
</span><span class="sc24">            </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">tb</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc12">.</span><span class="sc0">create</span><span class="sc12">()</span><span class="sc24">
            </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">dex</span><span class="sc12">.</span><span class="sc0">size</span><span class="sc12">[</span><span class="sc6">this</span><span class="sc12">.</span><span class="sc0">size</span><span class="sc12">]</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">tb</span><span class="sc24">
        </span><span class="sc8">endif</span><span class="sc24">
   
        </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc0">dex</span><span class="sc12">.</span><span class="sc0">size</span><span class="sc12">.</span><span class="sc0">remove</span><span class="sc12">(</span><span class="sc6">this</span><span class="sc12">)</span><span class="sc24"> </span><span class="sc2">//Clear the array size from hash memory
</span><span class="sc24">   
        </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">tb</span><span class="sc12">[</span><span class="sc6">this</span><span class="sc12">]</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">tb</span><span class="sc12">[</span><span class="sc3">0</span><span class="sc12">]</span><span class="sc24">
        </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">tb</span><span class="sc12">[</span><span class="sc3">0</span><span class="sc12">]</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
 
    </span><span class="sc8">private</span><span class="sc24"> </span><span class="sc8">static</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc24"> </span><span class="sc0">tempTable</span><span class="sc24">
    </span><span class="sc8">private</span><span class="sc24"> </span><span class="sc8">static</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc0">tempEnd</span><span class="sc24">
 
    </span><span class="sc2">//Avoids hitting the op limit
</span><span class="sc24">    </span><span class="sc8">private</span><span class="sc24"> </span><span class="sc8">static</span><span class="sc24"> </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc0">clean</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24">
        </span><span class="sc8">local</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc24"> </span><span class="sc0">tb</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc12">.</span><span class="sc0">tempTable</span><span class="sc24">
        </span><span class="sc8">local</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc8">end</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">tb</span><span class="sc24"> </span><span class="sc12">+</span><span class="sc24"> </span><span class="sc3">0x1000</span><span class="sc24">
        </span><span class="sc8">if</span><span class="sc24"> </span><span class="sc8">end</span><span class="sc24"> </span><span class="sc12">&lt;</span><span class="sc24"> </span><span class="sc12">.</span><span class="sc0">tempEnd</span><span class="sc24"> </span><span class="sc8">then</span><span class="sc24">
            </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc12">.</span><span class="sc0">tempTable</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc8">end</span><span class="sc24">
            </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc4">ForForce</span><span class="sc12">(</span><span class="sc6">bj_FORCE_PLAYER</span><span class="sc12">[</span><span class="sc3">0</span><span class="sc12">],</span><span class="sc24"> </span><span class="sc8">function</span><span class="sc24"> </span><span class="sc7">thistype</span><span class="sc12">.</span><span class="sc0">clean</span><span class="sc12">)</span><span class="sc24">
        </span><span class="sc8">else</span><span class="sc24">
            </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc8">end</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc12">.</span><span class="sc0">tempEnd</span><span class="sc24">
        </span><span class="sc8">endif</span><span class="sc24">
        </span><span class="sc8">loop</span><span class="sc24">
            </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc0">tb</span><span class="sc12">.</span><span class="sc0">flush</span><span class="sc12">()</span><span class="sc24">
            </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">tb</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">tb</span><span class="sc24"> </span><span class="sc12">+</span><span class="sc24"> </span><span class="sc3">1</span><span class="sc24">
            </span><span class="sc8">exitwhen</span><span class="sc24"> </span><span class="sc0">tb</span><span class="sc24"> </span><span class="sc12">==</span><span class="sc24"> </span><span class="sc8">end</span><span class="sc24">
        </span><span class="sc8">endloop</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
 
    </span><span class="sc2">//Flushes the TableArray and also destroys it. Doesn't get any more
</span><span class="sc24">    </span><span class="sc2">//similar to the FlushParentHashtable native than this.
</span><span class="sc24">    </span><span class="sc2">//
</span><span class="sc24">    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc0">flush</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24">
        </span><span class="sc8">debug</span><span class="sc24"> </span><span class="sc8">if</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc12">.</span><span class="sc0">size</span><span class="sc24"> </span><span class="sc12">==</span><span class="sc24"> </span><span class="sc3">0</span><span class="sc24"> </span><span class="sc8">then</span><span class="sc24">
            </span><span class="sc8">debug</span><span class="sc24"> </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc5">BJDebugMsg</span><span class="sc12">(</span><span class="sc16">"TypeError: Tried to flush an invalid TableArray instance: "</span><span class="sc24"> </span><span class="sc12">+</span><span class="sc24"> </span><span class="sc4">I2S</span><span class="sc12">(</span><span class="sc6">this</span><span class="sc12">))</span><span class="sc24">
            </span><span class="sc8">debug</span><span class="sc24"> </span><span class="sc8">return</span><span class="sc24">
        </span><span class="sc8">debug</span><span class="sc24"> </span><span class="sc8">endif</span><span class="sc24">
        </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc12">.</span><span class="sc0">tempTable</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc24">
        </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc12">.</span><span class="sc0">tempEnd</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc24"> </span><span class="sc12">+</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc12">.</span><span class="sc0">size</span><span class="sc24">
        </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc4">ForForce</span><span class="sc12">(</span><span class="sc6">bj_FORCE_PLAYER</span><span class="sc12">[</span><span class="sc3">0</span><span class="sc12">],</span><span class="sc24"> </span><span class="sc8">function</span><span class="sc24"> </span><span class="sc7">thistype</span><span class="sc12">.</span><span class="sc0">clean</span><span class="sc12">)</span><span class="sc24">
        </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc12">.</span><span class="sc0">destroy</span><span class="sc12">()</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
 
</span><span class="sc8">endstruct</span><span class="sc24">
 
</span><span class="sc2">//Added in Table 4.0. A fairly simple struct but allows you to do more
//than that which was previously possible.
</span><span class="sc8">struct</span><span class="sc24"> </span><span class="sc0">HashTable</span><span class="sc24"> </span><span class="sc8">extends</span><span class="sc24"> </span><span class="sc7">array</span><span class="sc24">

    </span><span class="sc2">//Enables myHash[parentKey][childKey] syntax.
</span><span class="sc24">    </span><span class="sc2">//Basically, it creates a Table in the place of the parent key if
</span><span class="sc24">    </span><span class="sc2">//it didn't already get created earlier.
</span><span class="sc24">    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc8">operator</span><span class="sc24"> </span><span class="sc12">[]</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc0">index</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc24">
        </span><span class="sc8">local</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc12">(</span><span class="sc6">this</span><span class="sc12">)[</span><span class="sc0">index</span><span class="sc12">]</span><span class="sc24">
        </span><span class="sc8">if</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc24"> </span><span class="sc12">==</span><span class="sc24"> </span><span class="sc3">0</span><span class="sc24"> </span><span class="sc8">then</span><span class="sc24">
            </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc12">.</span><span class="sc0">create</span><span class="sc12">()</span><span class="sc24">
            </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc12">(</span><span class="sc6">this</span><span class="sc12">)[</span><span class="sc0">index</span><span class="sc12">]</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc24">
        </span><span class="sc8">endif</span><span class="sc24">
        </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">

    </span><span class="sc2">//You need to call this on each parent key that you used if you
</span><span class="sc24">    </span><span class="sc2">//intend to destroy the HashTable or simply no longer need that key.
</span><span class="sc24">    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc0">remove</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc0">index</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24">
        </span><span class="sc8">local</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc12">(</span><span class="sc6">this</span><span class="sc12">)[</span><span class="sc0">index</span><span class="sc12">]</span><span class="sc24">
        </span><span class="sc8">if</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc24"> </span><span class="sc12">!=</span><span class="sc24"> </span><span class="sc3">0</span><span class="sc24"> </span><span class="sc8">then</span><span class="sc24">
            </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc12">.</span><span class="sc0">destroy</span><span class="sc12">()</span><span class="sc24">               </span><span class="sc2">//clear indexed table
</span><span class="sc24">            </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc12">(</span><span class="sc6">this</span><span class="sc12">).</span><span class="sc0">remove</span><span class="sc12">(</span><span class="sc0">index</span><span class="sc12">)</span><span class="sc24"> </span><span class="sc2">//clear reference to that table
</span><span class="sc24">        </span><span class="sc8">endif</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
 
    </span><span class="sc2">//Added in version 4.1
</span><span class="sc24">    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc0">has</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc0">index</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">boolean</span><span class="sc24">
        </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc12">(</span><span class="sc6">this</span><span class="sc12">).</span><span class="sc0">has</span><span class="sc12">(</span><span class="sc0">index</span><span class="sc12">)</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
 
    </span><span class="sc2">//HashTables are mostly just fancy Table indices.
</span><span class="sc24">    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc0">destroy</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24">
        </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc12">(</span><span class="sc6">this</span><span class="sc12">).</span><span class="sc0">destroy</span><span class="sc12">()</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
 
    </span><span class="sc8">static</span><span class="sc24"> </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc0">create</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">thistype</span><span class="sc24">
        </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc12">.</span><span class="sc0">create</span><span class="sc12">()</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">

</span><span class="sc8">endstruct</span><span class="sc24">

</span><span class="sc2">//Added in Table 5.0. Similar to the HashTable struct but with the
//ability to log each value saved into the HashTable to automate
//deallocation.
</span><span class="sc8">private</span><span class="sc24"> </span><span class="sc8">module</span><span class="sc24"> </span><span class="sc0">TRACKER</span><span class="sc24">
    </span><span class="sc8">static</span><span class="sc24"> </span><span class="sc7">thistype</span><span class="sc24"> </span><span class="sc0">tracker</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc3">0</span><span class="sc24">
    </span><span class="sc8">private</span><span class="sc24"> </span><span class="sc8">static</span><span class="sc24"> </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc0">onInit</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24">
        </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">tracker</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc12">.</span><span class="sc0">create</span><span class="sc12">()</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
</span><span class="sc8">endmodule</span><span class="sc24">
</span><span class="sc8">struct</span><span class="sc24"> </span><span class="sc0">HashTableEx</span><span class="sc24"> </span><span class="sc8">extends</span><span class="sc24"> </span><span class="sc7">array</span><span class="sc24">

    </span><span class="sc8">implement</span><span class="sc24"> </span><span class="sc0">TRACKER</span><span class="sc24">

    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc8">operator</span><span class="sc24"> </span><span class="sc12">[]</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc0">index</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc24">
        </span><span class="sc8">local</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc0">i</span><span class="sc24">
        </span><span class="sc8">local</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc12">(</span><span class="sc6">this</span><span class="sc12">)[</span><span class="sc0">index</span><span class="sc12">]</span><span class="sc24">
        </span><span class="sc8">if</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc24"> </span><span class="sc12">==</span><span class="sc24"> </span><span class="sc3">0</span><span class="sc24"> </span><span class="sc8">then</span><span class="sc24">
            </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc12">.</span><span class="sc0">create</span><span class="sc12">()</span><span class="sc24">
            </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc12">(</span><span class="sc6">this</span><span class="sc12">)[</span><span class="sc0">index</span><span class="sc12">]</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc24">
            </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">tracker</span><span class="sc12">[</span><span class="sc6">this</span><span class="sc12">]</span><span class="sc24">          </span><span class="sc2">//get the tracking table's index for this HashTable     
</span><span class="sc24">            </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">i</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc12">[</span><span class="sc3">0</span><span class="sc12">]</span><span class="sc24"> </span><span class="sc12">+</span><span class="sc24"> </span><span class="sc3">1</span><span class="sc24">               </span><span class="sc2">//increase its size
</span><span class="sc24">            </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc12">[</span><span class="sc3">0</span><span class="sc12">]</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">i</span><span class="sc24">                   </span><span class="sc2">//save that size
</span><span class="sc24">            </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc12">[</span><span class="sc0">i</span><span class="sc12">]</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">index</span><span class="sc24">               </span><span class="sc2">//index the user's index to the tracker's slot at 'size'
</span><span class="sc24">        </span><span class="sc8">endif</span><span class="sc24">
        </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">

    </span><span class="sc2">//Extremely inefficient, but gets the job done if needed.
</span><span class="sc24">    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc0">remove</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc0">index</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24">
        </span><span class="sc8">local</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc0">i</span><span class="sc24">
        </span><span class="sc8">local</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc0">j</span><span class="sc24">
        </span><span class="sc8">local</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc12">(</span><span class="sc6">this</span><span class="sc12">)[</span><span class="sc0">index</span><span class="sc12">]</span><span class="sc24">
        </span><span class="sc8">if</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc24"> </span><span class="sc12">!=</span><span class="sc24"> </span><span class="sc3">0</span><span class="sc24"> </span><span class="sc8">then</span><span class="sc24">
            </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc12">.</span><span class="sc0">destroy</span><span class="sc12">()</span><span class="sc24">               </span><span class="sc2">//clear indexed table
</span><span class="sc24">            </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc12">(</span><span class="sc6">this</span><span class="sc12">).</span><span class="sc0">remove</span><span class="sc12">(</span><span class="sc0">index</span><span class="sc12">)</span><span class="sc24"> </span><span class="sc2">//clear reference to that table
</span><span class="sc24">            </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">tracker</span><span class="sc12">[</span><span class="sc6">this</span><span class="sc12">]</span><span class="sc24">
            </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">i</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc12">[</span><span class="sc3">0</span><span class="sc12">]</span><span class="sc24">
            </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">j</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">i</span><span class="sc24">
            </span><span class="sc8">loop</span><span class="sc24">
                </span><span class="sc8">exitwhen</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc12">[</span><span class="sc0">i</span><span class="sc12">]</span><span class="sc24"> </span><span class="sc12">==</span><span class="sc24"> </span><span class="sc0">index</span><span class="sc24"> </span><span class="sc2">//removal is o(n) based
</span><span class="sc24">                </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">i</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">i</span><span class="sc24"> </span><span class="sc12">-</span><span class="sc24"> </span><span class="sc3">1</span><span class="sc24">
            </span><span class="sc8">endloop</span><span class="sc24">
            </span><span class="sc8">if</span><span class="sc24"> </span><span class="sc0">i</span><span class="sc24"> </span><span class="sc12">&lt;</span><span class="sc24"> </span><span class="sc0">j</span><span class="sc24"> </span><span class="sc8">then</span><span class="sc24">
                </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc12">[</span><span class="sc0">i</span><span class="sc12">]</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc12">[</span><span class="sc0">j</span><span class="sc12">]</span><span class="sc24"> </span><span class="sc2">//pop last item in the stack and insert in place of this removed item
</span><span class="sc24">            </span><span class="sc8">endif</span><span class="sc24">
            </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc12">.</span><span class="sc0">remove</span><span class="sc12">(</span><span class="sc0">j</span><span class="sc12">)</span><span class="sc24"> </span><span class="sc2">//free reference to the index
</span><span class="sc24">            </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc12">[</span><span class="sc3">0</span><span class="sc12">]</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">j</span><span class="sc24"> </span><span class="sc12">-</span><span class="sc24"> </span><span class="sc3">1</span><span class="sc24"> </span><span class="sc2">//decrease size of stack
</span><span class="sc24">        </span><span class="sc8">endif</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
 
    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc0">has</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc0">index</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">boolean</span><span class="sc24">
        </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc12">(</span><span class="sc6">this</span><span class="sc12">).</span><span class="sc0">has</span><span class="sc12">(</span><span class="sc0">index</span><span class="sc12">)</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
    
    </span><span class="sc2">//Useful for debugging purposes I suppose.
</span><span class="sc24">    </span><span class="sc2">//Treats the HashTable like a TableArray when used instead of [].
</span><span class="sc24">    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc0">getIndex</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc0">i</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc24">
        </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc0">tracker</span><span class="sc12">[</span><span class="sc6">this</span><span class="sc12">][</span><span class="sc0">i</span><span class="sc12">]</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
    
    </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc0">destroy</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24">
        </span><span class="sc8">local</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">tracker</span><span class="sc12">[</span><span class="sc6">this</span><span class="sc12">]</span><span class="sc24"> </span><span class="sc2">//tracker table
</span><span class="sc24">        </span><span class="sc8">local</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc24"> </span><span class="sc0">t2</span><span class="sc24">                </span><span class="sc2">//sub-tables of the primary HashTable
</span><span class="sc24">        </span><span class="sc8">local</span><span class="sc24"> </span><span class="sc7">integer</span><span class="sc24"> </span><span class="sc0">i</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc12">[</span><span class="sc3">0</span><span class="sc12">]</span><span class="sc24">        </span><span class="sc2">//get the number of tracked indices
</span><span class="sc24">        </span><span class="sc8">loop</span><span class="sc24">
            </span><span class="sc8">exitwhen</span><span class="sc24"> </span><span class="sc0">i</span><span class="sc24"> </span><span class="sc12">==</span><span class="sc24"> </span><span class="sc3">0</span><span class="sc24">
            </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">t2</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc12">[</span><span class="sc0">i</span><span class="sc12">]</span><span class="sc24">
            </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc0">t2</span><span class="sc12">.</span><span class="sc0">destroy</span><span class="sc12">()</span><span class="sc24">           </span><span class="sc2">//clear indexed sub-table
</span><span class="sc24">            </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc12">(</span><span class="sc6">this</span><span class="sc12">).</span><span class="sc0">remove</span><span class="sc12">(</span><span class="sc0">t2</span><span class="sc12">)</span><span class="sc24"> </span><span class="sc2">//clear reference to sub-table
</span><span class="sc24">            </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">i</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">i</span><span class="sc24"> </span><span class="sc12">-</span><span class="sc24"> </span><span class="sc3">1</span><span class="sc24">
        </span><span class="sc8">endloop</span><span class="sc24">
        </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc0">t</span><span class="sc12">.</span><span class="sc0">destroy</span><span class="sc12">()</span><span class="sc24">           </span><span class="sc2">//clear tracking sub-table
</span><span class="sc24">        </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc0">tracker</span><span class="sc12">.</span><span class="sc0">remove</span><span class="sc12">(</span><span class="sc6">this</span><span class="sc12">)</span><span class="sc24">  </span><span class="sc2">//clear reference to that table
</span><span class="sc24">        </span><span class="sc8">call</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc12">(</span><span class="sc6">this</span><span class="sc12">).</span><span class="sc0">destroy</span><span class="sc12">()</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">
 
    </span><span class="sc8">static</span><span class="sc24"> </span><span class="sc8">method</span><span class="sc24"> </span><span class="sc0">create</span><span class="sc24"> </span><span class="sc8">takes</span><span class="sc24"> </span><span class="sc7">nothing</span><span class="sc24"> </span><span class="sc8">returns</span><span class="sc24"> </span><span class="sc7">thistype</span><span class="sc24">
        </span><span class="sc8">local</span><span class="sc24"> </span><span class="sc7">thistype</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc0">Table</span><span class="sc12">.</span><span class="sc0">create</span><span class="sc12">()</span><span class="sc24">
        </span><span class="sc8">set</span><span class="sc24"> </span><span class="sc0">tracker</span><span class="sc12">[</span><span class="sc6">this</span><span class="sc12">][</span><span class="sc3">0</span><span class="sc12">]</span><span class="sc24"> </span><span class="sc12">=</span><span class="sc24"> </span><span class="sc3">0</span><span class="sc24">
        </span><span class="sc8">return</span><span class="sc24"> </span><span class="sc6">this</span><span class="sc24">
    </span><span class="sc8">endmethod</span><span class="sc24">

</span><span class="sc8">endstruct</span><span class="sc24">

</span><span class="sc8">endlibrary</span><span class="sc24">
</span></div></body>
</html>
